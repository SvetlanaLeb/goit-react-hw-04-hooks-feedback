{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","data","FeedbackOptions","options","onCountFeedback","wrapper","map","type","button","onClick","toString","Section","title","children","section","container","Notification","message","App","useState","setGood","setBad","setNeutral","state","positiveFeedbackPercentage","Math","round","countPositiveFeedbackPercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,iCAAiC,OAAS,gCAAgC,KAAO,8BAA8B,QAAU,iCAAiC,IAAM,+B,gBCA5LD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,uBAAuB,UAAY,6B,wICuBjFC,EAtBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,8BACE,+BACE,6BACE,oBAAGC,UAAWC,IAAEC,KAAhB,mBAA6BP,OAE/B,6BACE,oBAAGK,UAAWC,IAAEC,KAAhB,sBAAgCN,OAElC,6BACE,oBAAGI,UAAWC,IAAEC,KAAhB,kBAA4BL,OAE9B,6BACE,oBAAGG,UAAWC,IAAEC,KAAhB,oBAA8BJ,OAEhC,6BACE,oBAAGE,UAAWC,IAAEC,KAAhB,gCAA0CH,EAA1C,e,gBCAOI,EAhBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKL,UAAWC,IAAEK,QAAlB,SACGF,EAAQG,KAAI,SAAAC,GAAI,OACf,8BACE,wBACEA,KAAK,SACLR,UAAS,UAAKC,IAAEQ,OAAP,YAAiBR,IAAEO,IAC5BE,QAAS,kBAAML,EAAgBG,IAHjC,SAKGA,KANKA,EAAKG,kB,gBCWNC,EAbC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,yBAASd,UAAWC,IAAEc,QAAtB,SACE,sBAAKf,UAAWC,IAAEe,UAAlB,UACE,oBAAIhB,UAAWC,IAAEY,MAAjB,SAAyBA,IACxBC,QCAQG,EALM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KC4D3BC,MAxDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOzB,EAAP,KAAa0B,EAAb,KACA,EAAsBD,mBAAS,GAA/B,mBAAOvB,EAAP,KAAYyB,EAAZ,KACA,EAA8BF,mBAAS,GAAvC,mBAAOxB,EAAP,KAAgB2B,EAAhB,KACMzB,EAAQH,EAAOC,EAAUC,EA0B/B,OACE,qCACE,cAAC,EAAD,CAASgB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACET,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBA7Be,SAAAG,GACrB,OAAQA,GACN,IAAK,OACHa,GAAQ,SAAAG,GAAK,OAAIA,EAAQ,KACzB,MACF,IAAK,MACHF,GAAO,SAAAE,GAAK,OAAIA,EAAQ,KACxB,MACF,IAAK,UACHD,GAAW,SAAAC,GAAK,OAAIA,EAAQ,KAC5B,MACF,QACE,aAoBF,cAAC,EAAD,CAASX,MAAO,aAAhB,SACGf,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAvB8B,SAACJ,EAAMG,GAC7C,IAAI2B,EAA6B,EAIjC,OAHI9B,IACF8B,EAA6BC,KAAKC,MAAc,IAAPhC,EAAcG,IAElD2B,EAkBqBG,CAAgCjC,EAAMG,KAG5D,cAAC,EAAD,CAAcoB,QAAQ,wBAjB5B,QChCJW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4628fea8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"Statistics_data__1VdGt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackOptions_wrapper__1uJwS\",\"button\":\"FeedbackOptions_button__2Pr1v\",\"good\":\"FeedbackOptions_good__3H4Ll\",\"neutral\":\"FeedbackOptions_neutral__3YYIV\",\"bad\":\"FeedbackOptions_bad__3S0DQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2jbvy\",\"title\":\"Section_title__3B1a6\",\"container\":\"Section_container__1PsPU\"};","import s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <ul>\n      <li>\n        <p className={s.data}>Good: {good}</p>\n      </li>\n      <li>\n        <p className={s.data}>Neutral: {neutral}</p>\n      </li>\n      <li>\n        <p className={s.data}>Bad: {bad}</p>\n      </li>\n      <li>\n        <p className={s.data}>Total: {total}</p>\n      </li>\n      <li>\n        <p className={s.data}>Positive feedback: {positivePercentage}%</p>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Statistics;\n","import s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onCountFeedback }) => (\n  <div className={s.wrapper}>\n    {options.map(type => (\n      <div key={type.toString()}>\n        <button\n          type=\"button\"\n          className={`${s.button} ${s[type]}`}\n          onClick={() => onCountFeedback(type)}\n        >\n          {type}\n        </button>\n      </div>\n    ))}\n  </div>\n);\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={s.section}>\n    <div className={s.container}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </div>\n  </section>\n);\n\nSection.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => <p>{message}</p>;\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\nimport Statistics from './components/Statistics/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Notification from './components/Notification/Notification';\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const total = good + neutral + bad;\n\n  const handleBtnClick = type => {\n    switch (type) {\n      case 'good':\n        setGood(state => state + 1);\n        break;\n      case 'bad':\n        setBad(state => state + 1);\n        break;\n      case 'neutral':\n        setNeutral(state => state + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countPositiveFeedbackPercentage = (good, total) => {\n    let positiveFeedbackPercentage = 0;\n    if (good) {\n      positiveFeedbackPercentage = Math.round((good * 100) / total);\n    }\n    return positiveFeedbackPercentage;\n  };\n\n  return (\n    <>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onCountFeedback={handleBtnClick}\n        />\n      </Section>\n      <Section title={'Statistics'}>\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage(good, total)}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n      )\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}